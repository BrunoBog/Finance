{"version":3,"sources":["img/cifrao.svg","img/refresh.svg","img/cash-payment-bag-1.svg","components/Store/Context.js","utils/storage.js","components/Store/Provider.jsx","utils/useStorage.js","components/Routes/Private/Private.jsx","components/inputs/MoneyInput.jsx","components/Loading/Loading.jsx","utils/RequestConfig.js","components/AddSpends/SpendForm.jsx","components/RefreshButton/RefreshButton.jsx","components/WeekSpends/WeekSpendsItem.jsx","components/WeekSpends/WeekSpends.jsx","components/Spends/Spends.jsx","components/MonthSummary/MonthSpends.jsx","Pages/Home/Home.jsx","components/Login/UserLogin.jsx","components/Login/Register.jsx","Pages/Login/LoginPage.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","StoreContext","createContext","token","url","setToken","storage","window","localStorage","Error","set","key","value","setItem","JSON","stringify","get","item","getItem","parse","e","remove","removeItem","Cookie","getJSON","StoreProvider","children","useState","state","setState","useCallback","newValue","undefined","useStorage","Context","Provider","RoutesPrivate","Component","component","rest","useContext","render","to","defaultMaskOptions","prefix","suffix","includeThousandsSeparator","thousandsSeparatorSymbol","allowDecimal","decimalSymbol","decimalLimit","integerLimit","allowNegative","allowLeadingZeroes","CurrencyInput","maskOptions","inputProps","currencyMask","createNumberMask","mask","Loading","prop","type","color","list","ftype","Math","floor","random","length","Configs","baseUrl","initialState","name","description","date","Date","moneyValue","categoryId","messageWrong","isLoading","SpendForm","values","setValues","history","useHistory","verifyValue","replace","parseFloat","onChange","event","target","addSpend","a","floatValue","fetch","method","headers","body","response","status","push","ok","onSubmit","preventDefault","errorMessage","notify","message","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","className","newestOnTop","rtl","pauseOnFocusLoss","autoComplete","onDayChange","n","id","placeholder","RefreshButton","src","RefreshImage","alt","WeekSpendsItem","props","paybag","weekNumber","total","weeks","monthTotal","loading","refresh","getValues","text","json","data","summary","useEffect","fetchData","onClick","map","w","Spends","toLocaleDateString","spends","totalValue","searchDate","MonthSpends","getMonth","getFullYear","resp","sortSpends","i","reduce","accumulator","currentValue","items","sort","b","timestamp","toFixed","PagesHome","htmlFor","WeekSpends","user","password","UserLogin","Errormessage","login","Email","Password","cifrao","disabled","email","Register","register","UserName","LoginPage","isLogginActive","this","RightSide","classList","add","prevState","current","currentActive","ref","container","containerRef","changeState","bind","React","PagesRoot","path","Home","Boolean","location","hostname","match","ReactDOM","StrictMode","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.cc89f5c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cifrao.1a271b19.svg\";","module.exports = __webpack_public_path__ + \"static/media/refresh.9fb1e188.svg\";","module.exports = __webpack_public_path__ + \"static/media/cash-payment-bag-1.71e76e56.svg\";","import {createContext} from 'react'\n\n\nconst StoreContext = createContext({\n    token: null,\n    url: \"https://finance.josafat.duckdns.org\",\n    setToken: () => {},\n});\n\nexport default StoreContext;","import Cookie from 'js-cookie';\n\nconst storage = {};\n\n// Safari in incognito has local storage, but size 0\n// This system falls back to cookies in that situation\ntry {\n  if (!window.localStorage) {\n    throw Error('no local storage');\n  }\n\n  // Setup simple local storage wrapper\n  storage.set = (key, value) => localStorage.setItem(key, JSON.stringify(value));\n  storage.get = (key) => {\n    const item = localStorage.getItem(key);\n    try {\n      return JSON.parse(item);\n    } catch (e) {\n      return null;\n    }\n  };\n  storage.remove = key => localStorage.removeItem(key);\n} catch (e) {\n  storage.set = Cookie.set;\n  storage.get = Cookie.getJSON;\n  storage.remove = Cookie.remove;\n}\n\nexport default storage;\n","import React from 'react'\nimport Context from './Context'\nimport useStorage from '../../utils/useStorage'\n\nconst StoreProvider = ({ children }) => {\n    const [token, setToken] = useStorage('token');\n\n    return <Context.Provider value={{ token, setToken }}>\n        {children}\n    </Context.Provider>\n}\n\nexport default StoreProvider;","import { useCallback, useState } from 'react';\nimport storage from './storage';\n\nexport default function useStorage(key) {\n  const [state, setState] = useState(() => storage.get(key));\n\n  const set = useCallback(newValue => {\n    storage.set(key, newValue);\n    setState(newValue);\n  }, [key]);\n\n  const remove = useCallback(() => {\n    storage.remove(key);\n    setState(undefined);\n  }, [key]);\n\n  return [state, set, remove];\n}\n","  \nimport React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport StoreContext from '../../../components/Store/Context';\n\nconst RoutesPrivate = ({ component: Component, ...rest}) => {\n  const { token } = useContext(StoreContext);\n\n  return (\n    <Route\n      {...rest}\n      render={() => token\n        ? <Component {...rest} />\n        : <Redirect to=\"/login\" />\n      }\n    />\n  )\n}\n\nexport default RoutesPrivate;","import React from 'react'\nimport MaskedInput from 'react-text-mask'\nimport createNumberMask from 'text-mask-addons/dist/createNumberMask'\n\nconst defaultMaskOptions = {\n  prefix: '',\n  suffix: '',\n  includeThousandsSeparator: true,\n  thousandsSeparatorSymbol: ',',\n  allowDecimal: true,\n  decimalSymbol: '.',\n  decimalLimit: 2, // how many digits allowed after the decimal\n  integerLimit: 7, // limit length of integer numbers\n  allowNegative: false,\n  allowLeadingZeroes: false,\n}\n\nconst CurrencyInput = ({ maskOptions, ...inputProps }) => {\n  const currencyMask = createNumberMask({\n    ...defaultMaskOptions,\n    ...maskOptions,\n  })\n\n  return <MaskedInput mask={currencyMask} {...inputProps} />\n}\n\nexport default CurrencyInput\n","import React from 'react';\nimport ReactLoading from 'react-loading';\n\nconst Loading = (prop) => {\n    const {type, color} = prop\n\n    const list = [\"balls\",\"bars\",\"bubbles\",\"cubes\",\"cylon\",\"spin\",\"spinningBubbles\",\"spokes\"]\n    \n    let ftype = type ?? list[Math.floor(Math.random() * list.length)]\n\n    return (\n        <ReactLoading type={ftype} color={color ?? '#6EF9F5'}  />\n    )\n}\n\nexport default Loading","\nconst Configs = {\n    url: 'http://localhost:8080',\n    baseUrl: \"https://finance.josafat.duckdns.org\",\n    \n}\n\nexport default Configs;","import React, { useState, useContext } from 'react';\nimport StoreContext from '../Store/Context'\nimport { useHistory } from 'react-router-dom'\nimport CurrencyInput from '../inputs/MoneyInput'\nimport Loading from '../Loading/Loading'\n\nimport DayPickerInput from 'react-day-picker/DayPickerInput';\nimport 'react-day-picker/lib/style.css';\n\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Configs from '../../utils/RequestConfig'\n\n\nimport './SpendForm.scss';\n\nfunction initialState() {\n    return { name: ``, description: ``, date: new Date(), moneyValue: '', categoryId: ``, messageWrong: '', isLoading: false }\n}\n\nconst SpendForm = () => {\n    const { token } = useContext(StoreContext);\n    const [values, setValues] = useState(initialState)\n    const history = useHistory()\n    const { setToken } = useContext(StoreContext)\n\n    function verifyValue(value) {\n        value = value.replace(',', '.')\n        value = parseFloat(value)\n        return value\n    }\n\n    function onChange(event) {\n        const { value, name } = event.target\n        setValues({ ...values, [name]: value, })\n    }\n    const onDateChange = (date) => {\n        let n = Date.parse(date)\n        if (n) {\n            setValues({\n                ...values,\n                date: date,\n                messageWrong: ''\n            })\n        } else {\n            setValues({\n                ...values,\n                date: date,\n                messageWrong: 'Invalid Date'\n            })\n        }\n\n\n    }\n\n    async function addSpend({ name, description, moneyValue, date }) {\n        let floatValue = verifyValue(moneyValue)\n        let response = await fetch(`${Configs.baseUrl}/v1/Spends`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n            body: JSON.stringify({ name: name, description: description, value: floatValue, date: date }),\n        })\n        if (response.status === 401) {\n            setToken({ token: '', isLoading: false })\n            history.push('/login')\n        }\n        if (!response.ok) { return false }\n\n        return true\n    }\n\n    async function onSubmit(event) {\n        event.preventDefault()\n        setValues({ isLoading: true })\n\n        if (!await addSpend(values)) {\n            setValues({ errorMessage: \"Fail to add Spend\", isLoading:false })\n            return\n        }\n\n        notify(\"Saved!\")\n        setValues(initialState)\n        setValues({ isLoading:false })\n    }\n\n    function notify(message) {\n        toast.success(`🦄 ${message}`, { position: \"top-right\", autoClose: 5000, hideProgressBar: false, closeOnClick: true, pauseOnHover: true, draggable: true, progress: undefined, })\n    }\n\n    return (\n        <div className=\"addSpends\">\n\n            <header>\n                <span>New spend</span>\n                <ToastContainer\n                    position=\"top-right\"\n                    autoClose={5000}\n                    hideProgressBar={false}\n                    newestOnTop={false}\n                    closeOnClick\n                    rtl={false}\n                    pauseOnFocusLoss\n                    draggable\n                    pauseOnHover\n                />\n            </header>\n            <main>\n                <form className=\"addSpend\" autoComplete=\"nope\" onSubmit={onSubmit}>\n                    {/* Datepicker */}\n                    <div className=\"form-group\">\n                        <DayPickerInput onDayChange={onDateChange} name=\"date\" id=\"date\" value={values.date} />\n                    </div>\n                    {/* Nake Spend */}\n                    <div className=\"form-group\">\n                        <input type=\"texx\" name=\"name\" id=\"name\" placeholder=\"Name\" onChange={onChange} value={values.name} />\n                    </div>\n                    {/* Descriprion */}\n                    <div className=\"form-group\">\n                        <input type=\"text\" name=\"description\" id=\"description\" placeholder=\"Description\" onChange={onChange} value={values.description} />\n                    </div>\n                    {/* moneyValue */}\n                    <div className=\"form-group\">\n                        <CurrencyInput placeholder=\"R$ 0.00\" type=\"text\" onChange={onChange} name=\"moneyValue\" id=\"moneyValue\" value={values.moneyValue} />\n                    </div>\n                    <span className='ErrorMesssage'>{values.messageWrong}</span>\n                    <footer className=\"footer\">\n                        {values.isLoading\n                            ? <Loading />\n                            : <button className=\"btn-inside\" type=\"submit\" id=\"submit\" onSubmit={onSubmit} >Send</button>\n                        }\n                    </footer>\n                </form>\n            </main>\n        </div>\n    )\n}\n\nexport default SpendForm","import React from 'react'\nimport RefreshImage from '../../img/refresh.svg'\nimport './RefreshButton.scss'\n\nconst RefreshButton = () =>{\n\n    return (\n        <div className=\"refresh\">\n            <img src={RefreshImage} alt=\"Refresh\"/>\n        </div>\n    )\n}\n\nexport default RefreshButton","import React, { useState } from 'react';\n\nimport paybag from \"../../img/cash-payment-bag-1.svg\";\nimport './WeekSpendsItem.scss'\n\nconst WeekSpendsItem = (props) => {\n    const [values] = useState(props)\n    \n    return (\n        <div className=\"weekdata\">\n            <div className=\"spendImg\">\n                <img src={paybag} alt=\"cifrão\" /></div>\n            <div className=\"spend\">\n                <div className=\"titleSpend\">Week: {values.weekNumber}</div>\n                <div className=\"value\">{values.total}</div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default WeekSpendsItem","import React, { useState, useContext, useEffect } from 'react';\nimport StoreContext from '../Store/Context'\nimport { useHistory } from 'react-router-dom'\nimport Loading from '../Loading/Loading'\nimport RefreshButton from '../RefreshButton/RefreshButton'\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport WeekSpendsItem from './WeekSpendsItem'\n\nimport Configs from '../../utils/RequestConfig'\n\nimport './WeekSpend.scss';\n\nfunction initialState() {\n    return { weeks: [], monthTotal: 0, messageWrong: '', loading: true, refresh: true }\n}\n\nconst SpendForm = () => {\n    const { token } = useContext(StoreContext);\n    const [values, setValues] = useState(initialState)\n    const { setToken } = useContext(StoreContext)\n    const history = useHistory()\n\n    useEffect(() => {\n        const fetchData = async () => { await getValues() }\n        fetchData();\n        //TODO Debit to resolve later\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [values.refresh])\n\n    async function getValues() {\n        let response = await fetch(`${Configs.baseUrl}/v1/Spends/weeksummary`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n        })\n        if (response.status === 401) {\n            setToken({ token: '' })\n            history.push('/login')\n        }\n\n        if (!response.ok) {\n            setValues({ ...values, messageWrong: response.text, loading: true })\n            notify(\"falha ao buscar os dados\")\n            return\n        }\n\n        let data = await response.json()\n\n        setValues({\n            ...values,\n            weeks: data.summary,\n            monthTotal: data.monthTotal,\n            loading: false\n        })\n    }\n\n    function notify(message) {\n        toast.success(`🩹 ${message}`, { position: \"top-right\", autoClose: 5000, hideProgressBar: false, closeOnClick: true, pauseOnHover: true, draggable: true, progress: undefined, })\n    }\n    function refreshValues(){\n        setValues({loading: true, refresh: !values.refresh})\n    }\n\n    return (\n        <div className=\"weekPanel\">\n            <header>\n                <span className=\"title\">Month spends</span>\n                <span onClick={refreshValues}><RefreshButton/></span>\n                <ToastContainer position=\"top-right\" autoClose={5000} hideProgressBar={false} newestOnTop={false} closeOnClick rtl={false} pauseOnFocusLoss draggable pauseOnHover />\n            </header>\n            <main className=\"container\">\n                {values.loading\n                    ? <Loading color=\"#6EF9F5\" />\n                    : values.weeks.map(w => <WeekSpendsItem total={w.total} weekNumber={w.weekNumber} key={w.weekNumber} />)\n                }\n            </main>\n        </div>\n    )\n}\n\nexport default SpendForm","import React, { useState } from 'react'\nimport './Spends.scss'\n\n\nconst Spends = (prop) => {\n    const [values] = useState(prop)\n    debugger\n\n    return (\n        <div className=\"spend-content\">\n            <header>\n                <span className='spendTitle'>{values.name}: </span>\n                <span className=\"dateSpend\">{new Date(values.date).toLocaleDateString()}</span>\n            </header>\n\n            <span>\n                R$: {values.value}\n            </span>\n\n        </div>\n    )\n}\n\nexport default Spends","import React, { useState, useContext, useEffect, setToken } from 'react'\nimport Loading from '../Loading/Loading'\nimport Spends from '../Spends/Spends'\nimport StoreContext from '../Store/Context'\nimport Configs from '../../utils/RequestConfig'\nimport { useHistory } from 'react-router-dom'\nimport './MonthSpends.scss'\n\nfunction initialState() {\n    return { spends: [], totalValue: 0, loading: true, searchDate: new Date() }\n}\nconst MonthSpends = () => {\n    const [values, setValues] = useState(initialState)\n    const { token } = useContext(StoreContext);\n    const history = useHistory()\n\n\n    useEffect(() => {\n        const fetchData = async () => { await getValues() }\n        fetchData();\n        //TODO Debit to resolve later\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    async function getValues() {\n\n        let response = await fetch(`${Configs.baseUrl}/v1/Spends/month?month=${values.searchDate.getMonth() + 1}&year=${values.searchDate.getFullYear()}`, {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer ${token}`\n            },\n        })\n        if (response.status === 401) {\n            setToken({ token: '' })\n            history.push('/login')\n        }\n\n        if (!response.ok) {\n            setValues({ messageWrong: response.text, loading: true })\n            // notify(\"falha ao buscar os dados\")\n            return\n        }\n\n        let resp = await response.json()\n        debugger\n        setValues({\n            spends: sortSpends(resp),\n            totalValue: resp.map(i => i.value).reduce((accumulator, currentValue) => accumulator + currentValue),\n            loading: false\n        })\n    }\n\n    function sortSpends(items) {\n        return items.sort((a, b) => {\n            if (a.date > b.date) {\n                return 1;\n            }\n            if (a.date < b.date) {\n                return -1;\n            }\n            return 0;\n        })\n    }\n\n    return (\n        <div className=\"month-content\">\n            <header>\n                Month Summary\n            </header>\n\n            <main className=\"main-content\">\n                <div className=\"principal\">\n                    {values.loading\n                        ? <Loading color=\"#6EF9F5\" />\n                        : values.spends.map(w =>\n                            <Spends\n                                name={w.name}\n                                value={w.value}\n                                date={w.date}\n                                description={w.description}\n                                key={w.id.timestamp}\n                            />)\n                    }\n                </div>\n            </main>\n\n            <footer>\n                Total:  {values.totalValue.toFixed(2)}\n            </footer>\n        </div>\n    )\n}\n\nexport default MonthSpends","import React, { useContext } from 'react';\nimport StoreContext from '../../components/Store/Context'\nimport { useHistory } from 'react-router-dom'\nimport SpendForm from '../../components/AddSpends/SpendForm'\nimport WeekSpends from \"../../components/WeekSpends/WeekSpends\"\nimport MonthSpends from '../../components/MonthSummary/MonthSpends'\nimport './home.scss'\n\nconst PagesHome = () => {\n  const { setToken } = useContext(StoreContext)\n  const history = useHistory()\n\n  function logout() {\n    setToken({ token: '' })\n    history.push('/login')\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"pages-home\">\n\n        <div className=\"home-container\">\n\n          <header className=\"header-home\">\n            Olha  que cabeçalho bunito\n            <div className=\"logout\">\n              <span htmlFor=\"\">Sair do Bufunfas $$ </span>\n              <button type=\"button\" onClick={logout}>Sair</button>\n            </div>\n          </header>\n\n          <div className=\"hero\">\n            <span>Chegou na Home em danado ? </span>\n          </div>\n\n\n\n          <main className=\"main-content\">\n              <article className=\"newEntry\">\n                <SpendForm />\n              </article>\n\n              <article className=\"summary\">\n                <WeekSpends />\n              </article>\n\n              <article className=\"summary\">\n                <MonthSpends/>\n              </article>\n\n          </main>\n          \n          \n        </div>\n\n      </div>\n    </div>\n  )\n};\n\nexport default PagesHome;\n","import React, { useState, useContext } from 'react';\nimport StoreContext from '../../components/Store/Context'\nimport { useHistory } from 'react-router-dom'\nimport cifrao from \"../../img/cifrao.svg\";\nimport Configs from '../../utils/RequestConfig'\nimport Loading from '../Loading/Loading'\n\nimport './Login.scss';\n\nfunction initialState() {\n    return { user: '', password: '', errorMessage: '', loading: false }\n}\n\nconst UserLogin = () => {\n    const [values, setValues] = useState(initialState)\n    const { setToken } = useContext(StoreContext)\n    const history = useHistory()\n\n    function onChange(event) {\n        const { value, name } = event.target\n        setValues({\n\n            ...values,\n            [name]: value,\n        })\n    }\n\n    function Errormessage() {\n        return (<article className=\"errorMessage\"><label>{values.errorMessage}</label></article>)\n    }\n\n    async function login({ user, password }) {\n\n        let response = await fetch(`${Configs.baseUrl}/v1/User/login`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ Email: user, Password: password }),\n        })\n\n        if (!response.ok) {\n\n            setValues(initialState)\n            setValues({ errorMessage: \"Login Fail\", loading: false })\n        }\n\n        let { token } = await response.json()\n        if (token) {\n            setToken(token)\n            setValues({ loading: false })\n            history.push('/')\n        }\n    }\n\n    async function onSubmit(event) {\n        setValues({ loading: true })\n        event.preventDefault()\n        login(values)\n    }\n\n    return (\n        <div className=\"base-container\" >\n            <header>\n                <div className=\"header\">Login</div>\n            </header>\n            <form autoComplete=\"nope\" onSubmit={onSubmit}>\n                <div className=\"content\">\n\n                    :<div className=\"image\">\n                        <img src={cifrao} alt=\"cifrão\" />\n                    </div>\n\n                    <Errormessage />\n                    <div className=\"form\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\"> Username</label>\n                            <input type=\"text\" name=\"user\" id=\"user\" placeholder=\"Username\" onChange={onChange} value={values.user} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\"> Password </label>\n                            <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" onChange={onChange} value={values.password} />\n                        </div>\n                    </div>\n                    {values.loading ? <Loading color=\"#6EF9F5\" /> :\n                    <footer className=\"footer\">\n                        <button className=\"btn\" type=\"submit\" onSubmit={onSubmit} disabled={values.loading} >Login</button>\n                    </footer>\n                    }\n                </div>\n\n            </form>\n        </div>\n    );\n};\n\nexport default UserLogin;\n","import React, { useState, useContext } from 'react';\nimport StoreContext from '../../components/Store/Context'\nimport { useHistory } from 'react-router-dom'\nimport cifrao from \"../../img/cifrao.svg\";\nimport Configs from '../../utils/RequestConfig'\nimport Loading from '../Loading/Loading'\n\nimport './Login.scss';\n\nfunction initialState() {\n    return { user: '', password: '', email: '', errorMessage: '', loading: false }\n}\n\n\nconst Register = () => {\n    const [values, setValues] = useState(initialState)\n    const { setToken } = useContext(StoreContext)\n    const history = useHistory()\n\n    function onChange(event) {\n        const { value, name } = event.target\n        setValues({\n\n            ...values,\n            [name]: value,\n        })\n    }\n\n    async function register({ user, password, email }) {\n        let response = await fetch(`${Configs.baseUrl}/v1/User/signUp`, {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ Email: email, Password: password, UserName: user }),\n        })\n\n        if (response.status === 409) {\n            setValues({ errorMessage: \"Email already Exists\", loading: false })\n        }\n        \n        if (!response.ok) {\n            setValues(initialState)\n            setValues({ errorMessage: \"Register Fail\", loading: false })\n        }\n\n        let { token } = await response.json()\n        if (token) {\n            setToken(token)\n            setValues({ loading: false })\n            history.push('/')\n        }\n\n\n        let data = await response.json()\n        return data\n    }\n\n    async function onSubmit(event) {\n        event.preventDefault()\n        register(values)\n    }\n\n    function Errormessage() {\n        return (<article className=\"errorMessage\"><label>{values.errorMessage}</label></article>)\n    }\n\n    return (\n        <div className=\"base-container\">\n            <header className=\"header\">\n                Register\n            </header>\n            <form autoComplete=\"nope\" onSubmit={onSubmit}>\n                <div className=\"content\">\n                    <div className=\"image\">\n                        <img src={cifrao} alt=\"cifrão\" />\n                    </div>\n                    <Errormessage />\n                    <div className=\"form\">\n                        <div className=\"form-group\">\n                            <label htmlFor=\"username\"> Username</label>\n                            <input type=\"text\" name=\"user\" id=\"user\" placeholder=\"Username\" onChange={onChange} value={values.user} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email\"> Email</label>\n                            <input type=\"text\" name=\"email\" id=\"email\" placeholder=\"Email\" onChange={onChange} value={values.email} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label htmlFor=\"password\"> Password </label>\n                            <input type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" onChange={onChange} value={values.password} />\n                        </div>\n                    </div>\n                </div>\n                {values.loading ? <Loading color=\"#6EF9F5\" /> :\n                    <footer className=\"footer\">\n                        <button className=\"btn\" type=\"submit\" onSubmit={onSubmit}>Register</button>\n                    </footer>\n                }\n            </form>\n        </div>\n    )\n};\n\nexport default Register;\n\n","import React from 'react'\nimport './style.scss'\nimport UserLogin from \"../../components/Login/UserLogin\"\nimport Register from \"../../components/Login/Register\"\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      isLogginActive: true\n    }\n  }\n\n  changeState() {\n    const { isLogginActive } = this.state\n    if (isLogginActive) {\n      this.RightSide.classList.remove(\"right\")\n      this.RightSide.classList.add(\"left\")\n    } else {\n      this.RightSide.classList.remove(\"left\")\n      this.RightSide.classList.add(\"right\")\n    }\n\n    this.setState((prevState) => ({ isLogginActive: !prevState.isLogginActive }))\n  }\n\n  render() {\n    const { isLogginActive } = this.state\n    const current = isLogginActive ? \"Register\" : \"Login\"\n    const currentActive = isLogginActive ? \"Login\" : \"Register\"\n    return (\n      <div className=\"App\">\n        <div className=\"login\">\n          <div className=\"container\" ref={ref => (this.container = ref)}>\n            {isLogginActive && <UserLogin containerRef={(ref) => this.current = ref} />}\n            {!isLogginActive && <Register containerRef={(ref) => this.current = ref} />}\n          </div>\n          <RightSide \n          current={current} \n          currentActive={currentActive} \n          containerRef={ref => this.RightSide = ref} \n          onClick={this.changeState.bind(this)} \n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nconst RightSide = props => {\n  return <div className=\"right-side right\" ref={props.containerRef} onClick={props.onClick}>\n    <div className=\"inner-container\">\n      <div className=\"text\">{props.current}</div>\n    </div>\n  </div>\n}\nexport default LoginPage;","import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom'\nimport StoreProvider from './components/Store/Provider'\nimport RoutesPrivate from './components/Routes/Private/Private'\nimport Home from './Pages/Home/Home.jsx'\nimport LoginPage from './Pages/Login/LoginPage.jsx'\n\nconst PagesRoot = () => (\n  <Router>\n    <StoreProvider>\n      <Switch>\n        <Route path=\"/login\" component={LoginPage} />\n        <RoutesPrivate path=\"/\" component={Home} />\n      </Switch>\n    </StoreProvider>\n  </Router>\n)\n\nexport default PagesRoot;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}